try{self["workbox:core:6.2.4"]&&_()}catch(T){}const e=(e,...s)=>{let t=e;return s.length>0&&(t+=` :: ${JSON.stringify(s)}`),t};class s extends Error{constructor(s,t){super(e(s,t)),this.name=s,this.details=t}}const t={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},r=e=>[t.prefix,e,t.suffix].filter((e=>e&&e.length>0)).join("-"),a=e=>e||r(t.precache),i=e=>e||r(t.runtime);function n(e,s){const t=s();return e.waitUntil(t),t}try{self["workbox:precaching:6.2.4"]&&_()}catch(T){}function o(e){if(!e)throw new s("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const s=new URL(e,location.href);return{cacheKey:s.href,url:s.href}}const{revision:t,url:r}=e;if(!r)throw new s("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(r,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(r,location.href),i=new URL(r,location.href);return a.searchParams.set("__WB_REVISION__",t),{cacheKey:a.href,url:i.href}}class c{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:s})=>{s&&(s.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:s,cachedResponse:t})=>{if("install"===e.type&&s&&s.originalRequest&&s.originalRequest instanceof Request){const e=s.originalRequest.url;t?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return t}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:s})=>{const t=(null==s?void 0:s.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return t?new Request(t,{headers:e.headers}):e},this._precacheController=e}}let h;async function u(e,t){let r=null;if(e.url){r=new URL(e.url).origin}if(r!==self.location.origin)throw new s("cross-origin-copy-response",{origin:r});const a=e.clone(),i={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},n=t?t(i):i,o=function(){if(void 0===h){const s=new Response("");if("body"in s)try{new Response(s.body),h=!0}catch(e){h=!1}h=!1}return h}()?a.body:await a.blob();return new Response(o,n)}function d(e,s){const t=new URL(e);for(const r of s)t.searchParams.delete(r);return t.href}class p{constructor(){this.promise=new Promise(((e,s)=>{this.resolve=e,this.reject=s}))}}const f=new Set;try{self["workbox:strategies:6.2.4"]&&_()}catch(T){}function g(e){return"string"==typeof e?new Request(e):e}class v{constructor(e,s){this._cacheKeys={},Object.assign(this,s),this.event=s.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const t of this._plugins)this._pluginStateMap.set(t,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let r=g(e);if("navigate"===r.mode&&t instanceof FetchEvent&&t.preloadResponse){const e=await t.preloadResponse;if(e)return e}const a=this.hasCallback("fetchDidFail")?r.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))r=await e({request:r.clone(),event:t})}catch(n){if(n instanceof Error)throw new s("plugin-error-request-will-fetch",{thrownErrorMessage:n.message})}const i=r.clone();try{let e;e=await fetch(r,"navigate"===r.mode?void 0:this._strategy.fetchOptions);for(const s of this.iterateCallbacks("fetchDidSucceed"))e=await s({event:t,request:i,response:e});return e}catch(o){throw a&&await this.runCallbacks("fetchDidFail",{error:o,event:t,originalRequest:a.clone(),request:i.clone()}),o}}async fetchAndCachePut(e){const s=await this.fetch(e),t=s.clone();return this.waitUntil(this.cachePut(e,t)),s}async cacheMatch(e){const s=g(e);let t;const{cacheName:r,matchOptions:a}=this._strategy,i=await this.getCacheKey(s,"read"),n=Object.assign(Object.assign({},a),{cacheName:r});t=await caches.match(i,n);for(const o of this.iterateCallbacks("cachedResponseWillBeUsed"))t=await o({cacheName:r,matchOptions:a,cachedResponse:t,request:i,event:this.event})||void 0;return t}async cachePut(e,t){const r=g(e);var a;await(a=0,new Promise((e=>setTimeout(e,a))));const i=await this.getCacheKey(r,"write");if(!t)throw new s("cache-put-with-no-response",{url:(n=i.url,new URL(String(n),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var n;const o=await this._ensureResponseSafeToCache(t);if(!o)return!1;const{cacheName:c,matchOptions:l}=this._strategy,h=await self.caches.open(c),u=this.hasCallback("cacheDidUpdate"),p=u?await async function(e,s,t,r){const a=d(s.url,t);if(s.url===a)return e.match(s,r);const i=Object.assign(Object.assign({},r),{ignoreSearch:!0}),n=await e.keys(s,i);for(const o of n)if(a===d(o.url,t))return e.match(o,r)}(h,i.clone(),["__WB_REVISION__"],l):null;try{await h.put(i,u?o.clone():o)}catch(v){if(v instanceof Error)throw"QuotaExceededError"===v.name&&await async function(){for(const e of f)await e()}(),v}for(const s of this.iterateCallbacks("cacheDidUpdate"))await s({cacheName:c,oldResponse:p,newResponse:o.clone(),request:i,event:this.event});return!0}async getCacheKey(e,s){if(!this._cacheKeys[s]){let t=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))t=g(await e({mode:s,request:t,event:this.event,params:this.params}));this._cacheKeys[s]=t}return this._cacheKeys[s]}hasCallback(e){for(const s of this._strategy.plugins)if(e in s)return!0;return!1}async runCallbacks(e,s){for(const t of this.iterateCallbacks(e))await t(s)}*iterateCallbacks(e){for(const s of this._strategy.plugins)if("function"==typeof s[e]){const t=this._pluginStateMap.get(s),r=r=>{const a=Object.assign(Object.assign({},r),{state:t});return s[e](a)};yield r}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let s=e,t=!1;for(const r of this.iterateCallbacks("cacheWillUpdate"))if(s=await r({request:this.request,response:s,event:this.event})||void 0,t=!0,!s)break;return t||s&&200!==s.status&&(s=void 0),s}}class y extends class{constructor(e={}){this.cacheName=i(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[s]=this.handleAll(e);return s}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const s=e.event,t="string"==typeof e.request?new Request(e.request):e.request,r="params"in e?e.params:void 0,a=new v(this,{event:s,request:t,params:r}),i=this._getResponse(a,t,s);return[i,this._awaitComplete(i,a,t,s)]}async _getResponse(e,t,r){let a;await e.runCallbacks("handlerWillStart",{event:r,request:t});try{if(a=await this._handle(t,e),!a||"error"===a.type)throw new s("no-response",{url:t.url})}catch(i){if(i instanceof Error)for(const s of e.iterateCallbacks("handlerDidError"))if(a=await s({error:i,event:r,request:t}),a)break;if(!a)throw i}for(const s of e.iterateCallbacks("handlerWillRespond"))a=await s({event:r,request:t,response:a});return a}async _awaitComplete(e,s,t,r){let a,i;try{a=await e}catch(n){}try{await s.runCallbacks("handlerDidRespond",{event:r,request:t,response:a}),await s.doneWaiting()}catch(o){o instanceof Error&&(i=o)}if(await s.runCallbacks("handlerDidComplete",{event:r,request:t,response:a,error:i}),s.destroy(),i)throw i}}{constructor(e={}){e.cacheName=a(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(y.copyRedirectedCacheableResponsesPlugin)}async _handle(e,s){const t=await s.cacheMatch(e);return t||(s.event&&"install"===s.event.type?await this._handleInstall(e,s):await this._handleFetch(e,s))}async _handleFetch(e,t){let r;const a=t.params||{};if(!this._fallbackToNetwork)throw new s("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{const s=a.integrity,i=e.integrity,n=!i||i===s;r=await t.fetch(new Request(e,{integrity:i||s})),s&&n&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,r.clone()))}return r}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const r=await t.fetch(e);if(!(await t.cachePut(e,r.clone())))throw new s("bad-precaching-response",{url:e.url,status:r.status});return r}_useDefaultCacheabilityPluginIfNeeded(){let e=null,s=0;for(const[t,r]of this.plugins.entries())r!==y.copyRedirectedCacheableResponsesPlugin&&(r===y.defaultPrecacheCacheabilityPlugin&&(e=t),r.cacheWillUpdate&&s++);0===s?this.plugins.push(y.defaultPrecacheCacheabilityPlugin):s>1&&null!==e&&this.plugins.splice(e,1)}}y.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},y.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await u(e):e};class w{constructor({cacheName:e,plugins:s=[],fallbackToNetwork:t=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new y({cacheName:a(e),plugins:[...s,new l({precacheController:this})],fallbackToNetwork:t}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const r of e){"string"==typeof r?t.push(r):r&&void 0===r.revision&&t.push(r.url);const{cacheKey:e,url:a}=o(r),i="string"!=typeof r&&r.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==e)throw new s("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:e});if("string"!=typeof r&&r.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==r.integrity)throw new s("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(e,r.integrity)}if(this._urlsToCacheKeys.set(a,e),this._urlsToCacheModes.set(a,i),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return n(e,(async()=>{const s=new c;this.strategy.plugins.push(s);for(const[a,i]of this._urlsToCacheKeys){const s=this._cacheKeysToIntegrities.get(i),t=this._urlsToCacheModes.get(a),r=new Request(a,{integrity:s,cache:t,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:i},request:r,event:e}))}const{updatedURLs:t,notUpdatedURLs:r}=s;return{updatedURLs:t,notUpdatedURLs:r}}))}activate(e){return n(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),s=await e.keys(),t=new Set(this._urlsToCacheKeys.values()),r=[];for(const a of s)t.has(a.url)||(await e.delete(a),r.push(a.url));return{deletedURLs:r}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const s=new URL(e,location.href);return this._urlsToCacheKeys.get(s.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const s=e instanceof Request?e.url:e,t=this.getCacheKeyForURL(s);if(t){return(await self.caches.open(this.strategy.cacheName)).match(t)}}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new s("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}let m;const b=()=>(m||(m=new w),m);try{self["workbox:routing:6.2.4"]&&_()}catch(T){}const R=e=>e&&"object"==typeof e?e:{handle:e};class k{constructor(e,s,t="GET"){this.handler=R(s),this.match=e,this.method=t}setCatchHandler(e){this.catchHandler=R(e)}}class C extends k{constructor(e,s,t){super((({url:s})=>{const t=e.exec(s.href);if(t&&(s.origin===location.origin||0===t.index))return t.slice(1)}),s,t)}}class q{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:s}=e,t=this.handleRequest({request:s,event:e});t&&e.respondWith(t)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:s}=e.data,t=Promise.all(s.urlsToCache.map((s=>{"string"==typeof s&&(s=[s]);const t=new Request(...s);return this.handleRequest({request:t,event:e})})));e.waitUntil(t),e.ports&&e.ports[0]&&t.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:s}){const t=new URL(e.url,location.href);if(!t.protocol.startsWith("http"))return;const r=t.origin===location.origin,{params:a,route:i}=this.findMatchingRoute({event:s,request:e,sameOrigin:r,url:t});let n=i&&i.handler;const o=e.method;if(!n&&this._defaultHandlerMap.has(o)&&(n=this._defaultHandlerMap.get(o)),!n)return;let c;try{c=n.handle({url:t,request:e,event:s,params:a})}catch(h){c=Promise.reject(h)}const l=i&&i.catchHandler;return c instanceof Promise&&(this._catchHandler||l)&&(c=c.catch((async r=>{if(l)try{return await l.handle({url:t,request:e,event:s,params:a})}catch(i){i instanceof Error&&(r=i)}if(this._catchHandler)return this._catchHandler.handle({url:t,request:e,event:s});throw r}))),c}findMatchingRoute({url:e,sameOrigin:s,request:t,event:r}){const a=this._routes.get(t.method)||[];for(const i of a){let a;const n=i.match({url:e,sameOrigin:s,request:t,event:r});if(n)return a=n,(Array.isArray(a)&&0===a.length||n.constructor===Object&&0===Object.keys(n).length||"boolean"==typeof n)&&(a=void 0),{route:i,params:a}}return{}}setDefaultHandler(e,s="GET"){this._defaultHandlerMap.set(s,R(e))}setCatchHandler(e){this._catchHandler=R(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new s("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new s("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}}let x;function U(e,t,r){let a;if("string"==typeof e){const s=new URL(e,location.href);a=new k((({url:e})=>e.href===s.href),t,r)}else if(e instanceof RegExp)a=new C(e,t,r);else if("function"==typeof e)a=new k(e,t,r);else{if(!(e instanceof k))throw new s("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}return(x||(x=new q,x.addFetchListener(),x.addCacheListener()),x).registerRoute(a),a}class L extends k{constructor(e,s){super((({request:t})=>{const r=e.getURLsToCacheKeys();for(const a of function*(e,{ignoreURLParametersMatching:s=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:r=!0,urlManipulation:a}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const n=function(e,s=[]){for(const t of[...e.searchParams.keys()])s.some((e=>e.test(t)))&&e.searchParams.delete(t);return e}(i,s);if(yield n.href,t&&n.pathname.endsWith("/")){const e=new URL(n.href);e.pathname+=t,yield e.href}if(r){const e=new URL(n.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:i});for(const s of e)yield s.href}}(t.url,s)){const s=r.get(a);if(s){return{cacheKey:s,integrity:e.getIntegrityForCacheKey(s)}}}}),e.strategy)}}var K;(function(e){b().precache(e)})([{url:"/_app/start-0a06c350.js",revision:"un561t"},{url:"/_app/assets/start-464e9d0a.css",revision:"xdwrmx"},{url:"/_app/pages/__layout.svelte-9d500774.js",revision:"1dl15x"},{url:"/_app/assets/pages/__layout.svelte-504e7581.css",revision:"9sza2n"},{url:"/_app/error.svelte-9566238b.js",revision:"1h7ccl"},{url:"/_app/pages/index.svelte-98d43d61.js",revision:"2quxr3"},{url:"/_app/assets/pages/index.svelte-dc7ba67e.css",revision:"4we62i"},{url:"/_app/pages/build/index.svelte-0c2ddc30.js",revision:"n3j6ae"},{url:"/_app/pages/play/index.svelte-77574004.js",revision:"ltn7dk"},{url:"/_app/pages/[slug].svelte-c3f983e7.js",revision:"txqdpo"},{url:"/_app/chunks/vendor-bbe47adb.js",revision:"2flgez"},{url:"/_app/chunks/singletons-12a22614.js",revision:"nlbomk"},{url:"/_app/chunks/preload-helper-ec9aa979.js",revision:"lgkv1d"},{url:"/_app/chunks/GameControls-d7a44d87.js",revision:"9x6fsn"},{url:"/_app/chunks/stores-95512afe.js",revision:"kpulhk"},{url:"/_app/chunks/Game-c6420ef6.js",revision:"f49ghq"},{url:"/_app/chunks/README-855a7e4f.js",revision:"dk30k8"},{url:"/_app/chunks/Stack-7e9f1b4c.js",revision:"bjepge"},{url:"/_app/chunks/workbox-window.prod.es5-a2ea44c0.js",revision:"y150av"},{url:"/",revision:"u2him6"},{url:"/about",revision:"ydncgq"},{url:"/play",revision:"z3a577"},{url:"/build",revision:"xsa9ko"},{url:"/.nojekyll",revision:"ffi82o"},{url:"/apple-touch-icon.png",revision:"dn0266"},{url:"/browserconfig.xml",revision:"c0bxaz"},{url:"/cards/2_clubs.svg",revision:"u1ywh8"},{url:"/cards/2_diamonds.svg",revision:"ectsrt"},{url:"/cards/2_hearts.svg",revision:"bdqsx9"},{url:"/cards/2_spades.svg",revision:"nevm3h"},{url:"/cards/3_clubs.svg",revision:"6z2rwo"},{url:"/cards/3_diamonds.svg",revision:"vk56yh"},{url:"/cards/3_hearts.svg",revision:"7qipye"},{url:"/cards/3_spades.svg",revision:"5pdb7h"},{url:"/cards/4_clubs.svg",revision:"2eefpr"},{url:"/cards/4_diamonds.svg",revision:"ffagk1"},{url:"/cards/4_hearts.svg",revision:"ub3x1v"},{url:"/cards/4_spades.svg",revision:"kd3prb"},{url:"/cards/5_clubs.svg",revision:"goz31s"},{url:"/cards/5_diamonds.svg",revision:"rnflt9"},{url:"/cards/5_hearts.svg",revision:"xo4v9p"},{url:"/cards/5_spades.svg",revision:"u1643"},{url:"/cards/6_clubs.svg",revision:"uukr3e"},{url:"/cards/6_diamonds.svg",revision:"d9qah3"},{url:"/cards/6_hearts.svg",revision:"70ib3n"},{url:"/cards/6_spades.svg",revision:"a0mgbp"},{url:"/cards/7_clubs.svg",revision:"ltm0o7"},{url:"/cards/7_diamonds.svg",revision:"q57695"},{url:"/cards/7_hearts.svg",revision:"djj77k"},{url:"/cards/7_spades.svg",revision:"7uxhb9"},{url:"/cards/8_clubs.svg",revision:"dm9qgr"},{url:"/cards/8_diamonds.svg",revision:"imzix"},{url:"/cards/8_hearts.svg",revision:"xl14lv"},{url:"/cards/8_spades.svg",revision:"wpyrkq"},{url:"/cards/9_clubs.svg",revision:"7bd3jh"},{url:"/cards/9_diamonds.svg",revision:"gksgiw"},{url:"/cards/9_hearts.svg",revision:"t14gia"},{url:"/cards/9_spades.svg",revision:"gavetv"},{url:"/cards/A_clubs.svg",revision:"9a3heu"},{url:"/cards/A_diamonds.svg",revision:"39sg0w"},{url:"/cards/A_hearts.svg",revision:"79or4x"},{url:"/cards/A_spades.svg",revision:"xdu1ub"},{url:"/cards/J_clubs.svg",revision:"22efuy"},{url:"/cards/J_diamonds.svg",revision:"6vzopb"},{url:"/cards/J_hearts.svg",revision:"y18c0a"},{url:"/cards/J_spades.svg",revision:"rzvx8t"},{url:"/cards/K_clubs.svg",revision:"l7nyck"},{url:"/cards/K_diamonds.svg",revision:"s384nv"},{url:"/cards/K_hearts.svg",revision:"fq9u9"},{url:"/cards/K_spades.svg",revision:"tx5p9a"},{url:"/cards/Q_clubs.svg",revision:"oreaue"},{url:"/cards/Q_diamonds.svg",revision:"69fw3s"},{url:"/cards/Q_hearts.svg",revision:"fdrjld"},{url:"/cards/Q_spades.svg",revision:"tqpled"},{url:"/cards/T_clubs.svg",revision:"fppww9"},{url:"/cards/T_diamonds.svg",revision:"em5cy6"},{url:"/cards/T_hearts.svg",revision:"dhvbsp"},{url:"/cards/T_spades.svg",revision:"1txjc"},{url:"/cards/_back.svg",revision:"ibya5h"},{url:"/cards/_empty.svg",revision:"qy3xhi"},{url:"/cards/_joker.svg",revision:"w7x38u"},{url:"/favicon-16x16.png",revision:"oj2ftm"},{url:"/favicon-32x32.png",revision:"l7tqdc"},{url:"/favicon.ico",revision:"kfdiuz"},{url:"/favicon.svg",revision:"rm4b7w"},{url:"/manifest.json",revision:"71d46e"},{url:"/mstile-144x144.png",revision:"dqwy3a"},{url:"/mstile-150x150.png",revision:"z042i5"},{url:"/mstile-310x150.png",revision:"f85h4i"},{url:"/mstile-310x310.png",revision:"wnxzei"},{url:"/mstile-70x70.png",revision:"wcsx2n"},{url:"/pwa-192x192.png",revision:"1wqqrz"},{url:"/pwa-512x512.png",revision:"hdra8p"},{url:"/safari-pinned-tab.svg",revision:"uadvhm"}]),function(e){const s=b();U(new L(s,e))}(K),self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}));
